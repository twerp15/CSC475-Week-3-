package com.example.contactbook;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.ArrayAdapter;
import androidx.appcompat.app.AppCompatActivity;
import java.util.Map;
import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    EditText editTextName, editTextPhone;
    Button buttonAdd, buttonEdit, buttonDelete;
    SharedPreferences sharedPreferences;
    ListView listViewContacts;
    ArrayAdapter<String> adapter;
    ArrayList<String> contactsList;
    String selectedContactName = null;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        editTextName = findViewById(R.id.editTextName);
        editTextPhone = findViewById(R.id.editTextPhone);
        buttonAdd = findViewById(R.id.buttonAdd);
        buttonEdit = findViewById(R.id.buttonEdit);
        buttonDelete = findViewById(R.id.buttonDelete);
        listViewContacts = findViewById(R.id.listViewContacts);
        sharedPreferences = getSharedPreferences("contacts", MODE_PRIVATE);
        contactsList = new ArrayList<>();
        adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, contactsList);
        listViewContacts.setAdapter(adapter);
        loadContacts();
        buttonAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String name = editTextName.getText().toString();
                String phone = editTextPhone.getText().toString();
                addContact(name, phone);
            }
        });
        buttonEdit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (selectedContactName != null) {
                    String phone = editTextPhone.getText().toString();
                    editContact(selectedContactName, phone);
                }
            }
        });
        buttonDelete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (selectedContactName != null) {
                    deleteContact(selectedContactName);
                }
            }
        });
        listViewContacts.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                String contact = contactsList.get(position);
                String[] contactDetails = contact.split(":");
                selectedContactName = contactDetails[0].trim(); // Get the contact name
                String phone = contactDetails[1].trim(); // Get the phone number
                editTextName.setText(selectedContactName);
                editTextPhone.setText(phone);
            }
        });
    }
    private void addContact(String name, String phone) {
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putString(name, phone);
        editor.apply();
        loadContacts();
        clearFields();
    }
    private void editContact(String name, String phone) {
        if (sharedPreferences.contains(name)) {
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putString(name, phone);
            editor.apply();
            loadContacts();
            clearFields();
        }
    }
    private void deleteContact(String name) {
        if (sharedPreferences.contains(name)) {
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.remove(name);
            editor.apply();
            loadContacts();
            clearFields();
        }
    }
    private void loadContacts() {
        contactsList.clear();
        Map<String, ?> allContacts = sharedPreferences.getAll();
        for (Map.Entry<String, ?> entry : allContacts.entrySet()) {
            contactsList.add(entry.getKey() + ": " + entry.getValue().toString());
        }
        adapter.notifyDataSetChanged();
    }
    private void clearFields() {
        editTextName.setText("");
        editTextPhone.setText("");
        selectedContactName = null;
    }
}